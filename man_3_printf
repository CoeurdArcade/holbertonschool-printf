NAME


_printf - print formatted output to stdout
SYNOPSIS


#include "main.h"

int _printf(const char *format, ...);
DESCRIPTION
_printf is a custom implementation of the printf function from the C standard library. It prints formatted output to the standard output (stdout).

The format string specifies how subsequent arguments are converted for output. The format string consists of zero or more conversion specifications, each of which starts with a % character and ends with a conversion specifier character. The conversion specifier character indicates the type of conversion to be applied.

The following conversion specifiers are supported:

%c: prints a single character.
%s: prints a string.
%d or %i: prints a signed decimal integer.
%u: prints an unsigned decimal integer.
%o: prints an unsigned octal integer.
%x or %X: prints an unsigned hexadecimal integer.
%p: prints a pointer value.
%%: prints a literal % character.
Any character in the format string that is not part of a conversion specification is copied verbatim to the output.

RETURN VALUE
The _printf function returns the number of characters printed (excluding the null byte used to end output to strings), or -1 if an error occurs.

EXAMPLES


#include "main.h"
#include <stdio.h>

int main(void)
{
	_printf("Hello, %s!\n", "world");
	return 0;
}
In this example, the _printf function is used to print the string "Hello, world!\n" to the standard output. The %s conversion specifier is used to print the string "world".

AUTHORS
Written by Evrade Safou and David Vaucheret.

REPORTING BUGS
Report bugs to 8814@holbertonstudents.com or/and 9284@holbertonstudents.com

COPYRIGHT
Copyright 2024 HolbertonSchool.

AVAILABILITY
The _printf function is available under the terms of the Holberton license.


